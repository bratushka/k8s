---
version: "3"

services:
  api:
    build: k8s-api
    container_name: k8s-api
    depends_on:
      - async
      - sql
    env_file:
      - .envs/api.env
      - .envs/sql.env
    networks:
      - k8s-internal
    volumes:
      - ./k8s-api:/code

  async:
    build: k8s-async
    container_name: k8s-async
    networks:
      - k8s-internal
    volumes:
      - ./k8s-async:/code

  front:
    build: k8s-front
    container_name: k8s-front
    environment:
      - PORT=3000
      - CHOKIDAR_USEPOLLING=true
    networks:
      - k8s-internal
    volumes:
      - ./k8s-front:/code/

  graph:
    build: k8s-graph
    container_name: k8s-graph
    env_file:
      - .envs/graph.env
    networks:
      - k8s-internal
    volumes:
      - k8s-graph:/data/

  nginx:
    build: k8s-nginx
    container_name: k8s-nginx
    depends_on:
      - api
      - front
      - graph
    networks:
      - k8s-internal
    ports:
      - "443:443"    # front
      - "7474:7474"  # graph
      - "7687:7687"  # graph
      - "8000:8000"  # api
    volumes:
      - ./k8s-nginx/dev.conf:/etc/nginx/conf.d/dev.conf

  sql:
    build: k8s-sql
    container_name: k8s-sql
    env_file:
      - .envs/sql.env
    networks:
      - k8s-internal
    volumes:
      - k8s-sql:/var/lib/postgresql/data/

#  worker:
#    build: backend
#    command: >
#      celery
#      --app postera.celery
#      worker
#      --beat
#      --schedule /tmp/celerybeat
#      --loglevel WARNING
#    container_name: postera-worker
#    depends_on:
#      - db
#      - redis
#    env_file:
#      - .env
#    environment:
#      - COLUMNS=80
#    networks:
#      - postera-internal
#    tty: true
#    volumes:
#      - ./backend/:/code/
#
#  redis:
#    build: redis
#    container_name: postera-redis
#    env_file:
#      - .env
#    networks:
#      - postera-internal
#    volumes:
#      - postera-redis:/data/

networks:
  k8s-internal:

volumes:
  k8s-sql:
  k8s-graph:
  k8s-redis:
